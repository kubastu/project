# We are using the same commands as discussed in lecture in the terminal
# Volumes are created so there is persistence with data
# create volume: docker create volume calendar-db
# create volume: docker create volume calendar-db2
# start:   docker-compose -f docker-dbonly.yml up -d
# stop:    docker-compose -f docker-dbonly.yml down

version: '3.8'
services:
  postgres:
    container_name: calendar-postgres
    image: postgres
    env_file: ./.env
    volumes:
      - ./data-postgres:/var/lib/postgresql/data
#      - calendar-db:/var/lib/postgresql/data
    restart: always
    ports:
      - $POSTGRES_PORT:$POSTGRES_PORT
    environment:
      POSTGRES_PASSWORD: $SQL_PASSWORD
  mongo:
    container_name: calendar-mongo
    image: mongo
    env_file: ./.env
    volumes:
      - ./data-mongo:/data/db
#      - calendar-db2:/data/db
    restart: always
    ports:
      - $MONGO_PORT:$MONGO_PORT
#compose doesn't make a volume and uses calendar-db instead so it exists outside of the container
volumes:
  calendar-db:
    external: true
  calendar-db2:
    external: true
